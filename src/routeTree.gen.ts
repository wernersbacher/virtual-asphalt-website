/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RulesRouteImport } from './routes/rules'
import { Route as GetStartedRouteImport } from './routes/get-started'
import { Route as FaqRouteImport } from './routes/faq'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as ChampionshipsRouteImport } from './routes/championships'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HowtoRecordTelemetryRouteImport } from './routes/howto/record-telemetry'
import { Route as HowtoCreateTeamRouteImport } from './routes/howto/create-team'
import { Route as HowtoCreateSkinRouteImport } from './routes/howto/create-skin'

const RulesRoute = RulesRouteImport.update({
  id: '/rules',
  path: '/rules',
  getParentRoute: () => rootRouteImport,
} as any)
const GetStartedRoute = GetStartedRouteImport.update({
  id: '/get-started',
  path: '/get-started',
  getParentRoute: () => rootRouteImport,
} as any)
const FaqRoute = FaqRouteImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const ChampionshipsRoute = ChampionshipsRouteImport.update({
  id: '/championships',
  path: '/championships',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HowtoRecordTelemetryRoute = HowtoRecordTelemetryRouteImport.update({
  id: '/howto/record-telemetry',
  path: '/howto/record-telemetry',
  getParentRoute: () => rootRouteImport,
} as any)
const HowtoCreateTeamRoute = HowtoCreateTeamRouteImport.update({
  id: '/howto/create-team',
  path: '/howto/create-team',
  getParentRoute: () => rootRouteImport,
} as any)
const HowtoCreateSkinRoute = HowtoCreateSkinRouteImport.update({
  id: '/howto/create-skin',
  path: '/howto/create-skin',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/championships': typeof ChampionshipsRoute
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/get-started': typeof GetStartedRoute
  '/rules': typeof RulesRoute
  '/howto/create-skin': typeof HowtoCreateSkinRoute
  '/howto/create-team': typeof HowtoCreateTeamRoute
  '/howto/record-telemetry': typeof HowtoRecordTelemetryRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/championships': typeof ChampionshipsRoute
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/get-started': typeof GetStartedRoute
  '/rules': typeof RulesRoute
  '/howto/create-skin': typeof HowtoCreateSkinRoute
  '/howto/create-team': typeof HowtoCreateTeamRoute
  '/howto/record-telemetry': typeof HowtoRecordTelemetryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/championships': typeof ChampionshipsRoute
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/get-started': typeof GetStartedRoute
  '/rules': typeof RulesRoute
  '/howto/create-skin': typeof HowtoCreateSkinRoute
  '/howto/create-team': typeof HowtoCreateTeamRoute
  '/howto/record-telemetry': typeof HowtoRecordTelemetryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/championships'
    | '/contact'
    | '/faq'
    | '/get-started'
    | '/rules'
    | '/howto/create-skin'
    | '/howto/create-team'
    | '/howto/record-telemetry'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/championships'
    | '/contact'
    | '/faq'
    | '/get-started'
    | '/rules'
    | '/howto/create-skin'
    | '/howto/create-team'
    | '/howto/record-telemetry'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/championships'
    | '/contact'
    | '/faq'
    | '/get-started'
    | '/rules'
    | '/howto/create-skin'
    | '/howto/create-team'
    | '/howto/record-telemetry'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ChampionshipsRoute: typeof ChampionshipsRoute
  ContactRoute: typeof ContactRoute
  FaqRoute: typeof FaqRoute
  GetStartedRoute: typeof GetStartedRoute
  RulesRoute: typeof RulesRoute
  HowtoCreateSkinRoute: typeof HowtoCreateSkinRoute
  HowtoCreateTeamRoute: typeof HowtoCreateTeamRoute
  HowtoRecordTelemetryRoute: typeof HowtoRecordTelemetryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/rules': {
      id: '/rules'
      path: '/rules'
      fullPath: '/rules'
      preLoaderRoute: typeof RulesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/get-started': {
      id: '/get-started'
      path: '/get-started'
      fullPath: '/get-started'
      preLoaderRoute: typeof GetStartedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/championships': {
      id: '/championships'
      path: '/championships'
      fullPath: '/championships'
      preLoaderRoute: typeof ChampionshipsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/howto/record-telemetry': {
      id: '/howto/record-telemetry'
      path: '/howto/record-telemetry'
      fullPath: '/howto/record-telemetry'
      preLoaderRoute: typeof HowtoRecordTelemetryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/howto/create-team': {
      id: '/howto/create-team'
      path: '/howto/create-team'
      fullPath: '/howto/create-team'
      preLoaderRoute: typeof HowtoCreateTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/howto/create-skin': {
      id: '/howto/create-skin'
      path: '/howto/create-skin'
      fullPath: '/howto/create-skin'
      preLoaderRoute: typeof HowtoCreateSkinRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ChampionshipsRoute: ChampionshipsRoute,
  ContactRoute: ContactRoute,
  FaqRoute: FaqRoute,
  GetStartedRoute: GetStartedRoute,
  RulesRoute: RulesRoute,
  HowtoCreateSkinRoute: HowtoCreateSkinRoute,
  HowtoCreateTeamRoute: HowtoCreateTeamRoute,
  HowtoRecordTelemetryRoute: HowtoRecordTelemetryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
